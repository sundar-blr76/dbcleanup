# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/dbcleanup
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Redis Configuration
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=

# Cleanup Configuration
cleanup.scheduler.enabled=true
cleanup.scheduler.cron=0 0 2 * * ?  # Run at 2 AM daily
cleanup.max-concurrent-operations=3
cleanup.default-max-runtime-minutes=120
cleanup.default-max-percentage=25

# Backup Configuration
cleanup.backup.enabled=true
cleanup.backup.location=./backups
cleanup.backup.default-retention-days=30

# Logging Configuration
logging.level.org.example.dbcleanup=INFO
logging.level.org.springframework=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=logs/dbcleanup.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.tags.application=${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Application Name
spring.application.name=dbcleanup 